#!/bin/bash
#  https://github.com/Blacksuan19/Scripts/blob/d40f9fdb1562cbe3edfe40f53979fceaf90120d7/colors.sh
#   This file echoes a bunch of color codes to the
#   terminal to demonstrate what's available.  Each
#   line is the color code of one forground color,
#   out of 17 (default + 16 escapes), followed by a
#   test use of that color on all nine background
#   colors (default + 8 escapes).
#

T='gYw'   # The test text

echo -e "\n                 40m     41m     42m     43m\
	44m     45m     46m     47m";

for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' \
	'1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' \
	'  36m' '1;36m' '  37m' '1;37m';
  do FG=${FGs// /}
	  echo -en " $FGs \033[$FG  $T  "
	  for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
	  do echo -en "$EINS \033[$FG\033[$BG  $T  \033[0m";
	  done
	  echo;
  done
  echo

echo "==============="
echo "Test unicode characters"
echo "==============="
echo -e '\U0001f602'
printf '\xE2\x98\xA0\n'
echo "==============="

# https://stackoverflow.com/a/16509364
fast_chr() {
  local __octal
  local __char
  printf -v __octal '%03o' $1
  printf -v __char \\$__octal
  REPLY=$__char
}

unichr() {
  local c=$1    # Ordinal of char
  local l=0    # Byte ctr
  local o=63    # Ceiling
  local p=128    # Accum. bits
  local s=''    # Output string

  (( c < 0x80 )) && { fast_chr "$c"; echo -n "$REPLY"; return; }

  while (( c > o )); do
      fast_chr $(( t = 0x80 | c & 0x3f ))
      s="$REPLY$s"
      (( c >>= 6, l++, p += o+1, o>>=1 ))
  done

  fast_chr $(( t = p | c ))
  echo -n "$REPLY$s"
}

## test harness
for (( i=0x2500; i<0x2600; i++ )); do
  unichr $i
done

echo
